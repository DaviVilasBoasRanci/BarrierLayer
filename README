# BarrierLayer - Advanced System Security & Anti-Cheat for Linux Gaming

![BarrierLayer Logo Placeholder](https://via.placeholder.com/150x50?text=BarrierLayer+Logo) <!-- Replace with actual logo -->

## üõ°Ô∏è A Comprehensive Compatibility and Security Layer for Linux Gamers üéÆ

BarrierLayer is an innovative open-source project designed to empower Linux users to run Windows games, especially those with challenging anti-cheat software, seamlessly under Wine/Proton. By leveraging advanced low-level system techniques, BarrierLayer aims to bridge the compatibility gap and enhance system integrity during gameplay.

## ‚ú® Objective

In the evolving landscape of Linux gaming, anti-cheat solutions often pose significant barriers. BarrierLayer's primary objective is to provide a robust, transparent, and configurable framework that:

*   **Enables Anti-Cheat Compatibility:** Allows games with aggressive anti-cheat systems (like EAC, BattlEye) to run on Linux, which would otherwise prevent gameplay.
*   **Ensures System Integrity:** Provides a layer of security and monitoring to protect the system from potentially intrusive game anti-cheat mechanisms.
*   **Enhances User Experience:** Offers a smoother and more reliable gaming experience for titles traditionally confined to Windows.

## üöÄ Features

BarrierLayer achieves its goals through a multi-faceted approach, combining user-space and kernel-level interventions:

*   **User-Space Hooking (`barrierlayer_hook.so`):** Intercepts and manages critical Win32 API calls.
    *   **Process Hooks:** Monitors and controls process creation and manipulation.
    *   **Memory Hooks:** Oversees memory read/write operations for integrity checks.
    *   **File I/O Hooks:** Monitors file system access to prevent unauthorized modifications.
    *   **Registry Hooks:** Intercepts Windows Registry access.
    *   **Crypto Hooks:** Monitors cryptographic operations for anti-tampering measures.
    *   **Network Hooks:** (Planned/Under Development) For network activity monitoring.
*   **Kernel Module (`barrierlayer_kernel.ko`):** Provides deep system-level control and advanced anti-cheat evasion techniques.
    *   Enables low-level system call interception and manipulation.
    *   (Note: Specific advanced features like process-hiding are experimental and under development).
*   **Configurable Launcher (`barrierlayer-launcher.sh`):** A flexible launcher that intelligently integrates with Wine or Proton environments.
*   **Steam Integration:** Dedicated scripts for easy setup within Steam's launch options (`scripts/run_with_barrierlayer.sh`).
*   **Interactive Configuration (`make configs`):** A user-friendly command-line interface to customize build options and features.
*   **Comprehensive Logging:** Detailed internal logging for debugging and monitoring BarrierLayer's operations.
*   **Sandboxing Capabilities:** (Under Development) To further isolate game processes and enhance security.

## üõ†Ô∏è Getting Started

### Prerequisites

Before you begin, ensure you have the necessary build tools and libraries installed on your Linux system. You can use the provided `install-deps` target in the Makefile:

```bash
sudo make install-deps
```

### Installation

BarrierLayer provides an automated installation script to simplify the setup process. For detailed instructions on how to install BarrierLayer, including where files are placed and how to manage the kernel module, please refer to the dedicated installation guide:

‚û°Ô∏è [**INSTALLATION.md**](./INSTALLATION.md)

### Configuration

Customize BarrierLayer's features and build options using the interactive configuration CLI:

```bash
make configs
```

This will guide you through enabling/disabling features like kernel module support, GUI, Wine/Proton integration, and more.

### Building from Source

After configuring, compile the project:

```bash
make
```

### Usage

Once installed, you can launch games with BarrierLayer using the provided aliases or by configuring your game launcher (e.g., Steam).

*   **Standalone Executable:**
    ```bash
    barrierlayer /path/to/your/game.exe
    ```
*   **Steam Integration:** Add the following to your game's launch options in Steam:
    ```
    ENABLE_BARRIERLAYER=1 /full/path/to/BarrierLayer/scripts/run_with_barrierlayer.sh %command%
    ```

## ü§ù Contributing

We welcome contributions from the community! Whether it's bug reports, feature suggestions, or code contributions, your help is invaluable. Please refer to our [CONTRIBUTING.md](CONTRIBUTING.md) (coming soon) for guidelines.

## üìÑ License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.